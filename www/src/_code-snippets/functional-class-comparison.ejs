import { component, html, signal } from 'thunderous';


// Thunderous functional component:
const FnElement = component(() => {
  const count = signal(0);
  const increment = () => count.set(count() + 1);
  return html`
    <button onclick="${increment}">Increment</button>
    <output>${count}</output>
  `;
});


// Traditional class component with Thunderous helpers:
class ClssElement extends HTMLElement {
  #shadowRoot = this.attachShadow({ mode: 'closed' });
  #count = signal(0);
  increment() {
    const count = this.#count;
    count.set(count() + 1);
  }
  constructor() {
    super();
    const [count] = this.#count;
    this.#shadowRoot.append(html`
      <button onclick="${this.increment}">Increment</button>
      <output>${count}</output>
    `);
  }
}
